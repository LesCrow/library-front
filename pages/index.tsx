import axios from "axios";
import Head from "next/head";
import Header from "../src/components/layout/Header";
import Bibliotheque from "../src/components/Display/Bibliotheque";
import Authors from "../src/components/Display/Authors";
import { useQuery, useQueryClient } from "react-query";
import Genre from "../src/components/Display/Genre";
import { useState, useEffect } from "react";
import FormNewBook from "../src/components/forms/FormNewAuthor";
import FormNewAuthor from "../src/components/forms/FormNewGenre";
import FormNewGenre from "../src/components/forms/FormNewGenre";

import { useForm } from "react-hook-form";
import { TUser } from "../types/globals";

// Get books, authors & genres
const getAllBooks = async () => {
  try {
    const allBooks = await axios.get("http://localhost:5000/api/v1/books");
    return allBooks.data;
  } catch (error) {
    console.log(error);
  }
};

const getAllAuthors = async () => {
  try {
    const allAuthors = await axios.get("http://localhost:5000/api/v1/authors");
    return allAuthors.data;
  } catch (error) {
    console.log(error);
  }
};

const getAllGenres = async () => {
  try {
    const allGenres = await axios.get("http://localhost:5000/api/v1/genres");
    return allGenres.data;
  } catch (error) {
    console.log(error);
  }
};

export default function Home() {
  // BibliothÃ¨que, authors, collection and add form displayer
  const [isAddOpen, setIsAddOpen] = useState(false);
  const [isAddBookOpen, setIsAddBookOpen] = useState(false);
  const [isAddAuthorOpen, setIsAddAuthorOpen] = useState(false);
  const [isAddCollectionOpen, setIsAddCollectionOpen] = useState(false);

  useEffect(() => {
    isAddBookOpen && setIsAddAuthorOpen(false);
    setIsAddCollectionOpen(false);
  }, [isAddBookOpen]);

  useEffect(() => {
    isAddAuthorOpen && setIsAddBookOpen(false);
    setIsAddCollectionOpen(false);
  }, [isAddAuthorOpen]);

  useEffect(() => {
    isAddCollectionOpen && setIsAddBookOpen(false);
    setIsAddAuthorOpen(false);
  }, [isAddCollectionOpen]);

  useEffect(() => {
    !isAddOpen && setIsAddBookOpen(false);
    setIsAddAuthorOpen(false);
    setIsAddBookOpen(false);
    setIsAddCollectionOpen(false);
  }, [isAddOpen]);

  // UseQuery
  const { isLoading, data: allBooks, error } = useQuery("books", getAllBooks);
  const { data: allAuthors } = useQuery("authors", getAllAuthors);
  const { data: allGenres } = useQuery("genres", getAllGenres);

  if (isLoading) {
    return <p>Loading...</p>;
  }

  if (error) {
    return <p>Something bad happen</p>;
  }

  return (
    <div>
      <Head>
        <title>Wild Library</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://fonts.googleapis.com/css2?family=Montserrat&display=swap"
          rel="stylesheet"
        />
        <link
          href="https://fonts.googleapis.com/css2?family=Roboto&display=swap"
          rel="stylesheet"
        />
      </Head>

      <main>
        <div className="p-5">
          <Bibliotheque
            allBooks={allBooks}
            allAuthors={allAuthors}
            allGenres={allGenres}
          />
          <Authors allAuthors={allAuthors} />
          <Genre allGenres={allGenres} />
          <h2 className="w-fit" onClick={() => setIsAddOpen(!isAddOpen)}>
            ADD +
          </h2>
          {isAddOpen && (
            <div className="flex w-full justify-around my-5">
              <p onClick={() => setIsAddBookOpen(!isAddBookOpen)}>A book</p>
              <p onClick={() => setIsAddAuthorOpen(!isAddAuthorOpen)}>
                An author
              </p>
              <p onClick={() => setIsAddCollectionOpen(!isAddCollectionOpen)}>
                A collection
              </p>
            </div>
          )}
          {isAddBookOpen && (
            <FormNewBook allAuthors={allAuthors} allGenres={allGenres} />
          )}
          {isAddAuthorOpen && <FormNewAuthor />}
          {isAddCollectionOpen && <FormNewGenre />}
        </div>
      </main>
    </div>
  );
}
